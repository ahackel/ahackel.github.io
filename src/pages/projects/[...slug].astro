---
import Layout from '../../layouts/Layout.astro';
import Tag from '../../components/Tag.astro';
import { getCollection, CollectionEntry } from 'astro:content';
import TagList from '../../components/TagList.astro';
import { excludeDrafts } from '../../js/utils';
import Video from "../../components/Video.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection('projects', excludeDrafts);
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"projects">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const { title, type, date, tools, role, platforms, client, developer, videos, images } = entry.data;
---
<Layout title={title}>
  <div class="content-container">
    <div class="details">
      {videos?.map(src => <Video src={src} />)}
      {images?.map(src => <img src={"/images/" + src} />)}
    </div>
    <div class="overview">
      <h1>{title}</h1>
      <Content />
      <div class="grid">
        <div>Type</div><div><Tag name={type} /></div>
        <div>Year</div><div><Tag name={date.getFullYear().toString()} /></div>
        <div>Role</div><div><Tag name={role} /></div>
        {client && <div>Client</div><div><Tag name={client} /></div>}
        {developer && <div>Developer</div><div><Tag name={developer} /></div>}
        {tools && <div>Tools</div><div><TagList tags={tools} /></div>}
        {platforms && <div>Platform</div><div><TagList tags={platforms} /></div>}
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  .content-container {
    max-width: 100rem;
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 0px 1.25rem;
  }

  .details {
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: 1em;
    flex-wrap: wrap;
  }

  .details img, .details iframe {
    max-width: 100%;
    border-radius: var(--border-radius);
    display: block;
    max-height: 70vh;
    object-fit: contain;
  }

  .details iframe {
    width: 100%;
    aspect-ratio: 16 / 9;
  }
  
  .overview {
    flex: 0 0 30%;
    padding-left: 1.25rem;
  }

  .overview h1 {
    text-align: left;
    margin: 0;
  }

  .grid {
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-gap: 1rem;
    margin-top: 1rem;
  }
</style>